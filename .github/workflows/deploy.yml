name: Deploy to DigitalOcean

# This workflow runs on every push to the main branch.
on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push API Server image
        uses: docker/build-push-action@v5
        with:
          context: . # The context is now the root
          file: ./Dockerfile.api # Specify the dockerfile
          push: true
          tags: ghcr.io/${{ github.repository_owner }}/qed-api-server:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build and push Chronos Engine image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile.engine
          push: true
          tags: ghcr.io/${{ github.repository_owner }}/qed-chronos-engine:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Deploy to DigitalOcean Droplet
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DO_HOST }}
          username: ${{ secrets.DO_USER }}
          key: ${{ secrets.DO_SSH_PRIVATE_KEY }}
          script: |
            cd /var/www/qed_labyrinth
            git pull
            docker login ghcr.io -u ${{ github.repository_owner }} -p ${{ secrets.GHCR_TOKEN }}
            docker-compose -f docker-compose.prod.yml pull
            docker-compose -f docker-compose.prod.yml up -d
            docker image prune -af