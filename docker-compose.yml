services:
  postgres:
    image: postgres:16
    environment:
      POSTGRES_USER: ${QED_DB_USER}
      POSTGRES_PASSWORD: ${QED_DB_PASSWORD}
      POSTGRES_DB: ${QED_DB_NAME}
    volumes:
      - pg_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${QED_DB_USER} -d ${QED_DB_NAME}"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7

  chronos_engine:
    build:
      context: .
      dockerfile: Dockerfile.engine
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    environment:
      QED_DB_HOST: postgres
      QED_DB_PORT: 5432
      QED_DB_USER: ${QED_DB_USER}
      QED_DB_PASSWORD: ${QED_DB_PASSWORD}
      QED_DB_NAME: ${QED_DB_NAME}
      REDIS_HOST: redis
      REDIS_PORT: 6379
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      ANTHROPIC_API_KEY: ${ANTHROPIC_API_KEY}

  api_server:
    build:
      context: ./api-server
      dockerfile: Dockerfile.api
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    environment:
      QED_DB_HOST: postgres
      QED_DB_PORT: 5432
      QED_DB_USER: ${QED_DB_USER}
      QED_DB_PASSWORD: ${QED_DB_PASSWORD}
      QED_DB_NAME: ${QED_DB_NAME}
      REDIS_HOST: redis
      REDIS_PORT: 6379
      JWT_SECRET: ${JWT_SECRET}
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      ANTHROPIC_API_KEY: ${ANTHROPIC_API_KEY}
    ports:
      - "3001:3001"
    volumes:
      - ./api-server:/usr/src/app
    environment:
      - NODE_ENV=development

  agent_mind_service:
    build:
      context: ./agent-mind-service
      dockerfile: Dockerfile
    volumes:
      - ./agent-mind-service:/usr/src/app # For live-reloading during dev
      - ./schemas:/usr/src/app/schemas
    ports:
      - "5001:5001"
    environment:
      OPENAI_API_KEY: ${OPENAI_API_KEY}

volumes:
  pg_data: