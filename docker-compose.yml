services:
  postgres:
    image: postgres:16
    environment:
      POSTGRES_USER: ${QED_DB_USER}
      POSTGRES_PASSWORD: ${QED_DB_PASSWORD}
      POSTGRES_DB: ${QED_DB_NAME}
    volumes:
      - pg_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${QED_DB_USER} -d ${QED_DB_NAME}"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7

  chronos_engine:
    build:
      context: .
      dockerfile: Dockerfile.engine
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    environment:
      QED_DB_HOST: postgres
      QED_DB_PORT: 5432
      QED_DB_USER: ${QED_DB_USER}
      QED_DB_PASSWORD: ${QED_DB_PASSWORD}
      QED_DB_NAME: ${QED_DB_NAME}
      REDIS_HOST: redis
      REDIS_PORT: 6379

  api_server:
    build:
      context: .
      dockerfile: Dockerfile.api
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    environment:
      QED_DB_HOST: postgres
      QED_DB_PORT: 5432
      QED_DB_USER: ${QED_DB_USER}
      QED_DB_PASSWORD: ${QED_DB_PASSWORD}
      QED_DB_NAME: ${QED_DB_NAME}
      REDIS_HOST: redis
      REDIS_PORT: 6379
      JWT_SECRET: ${JWT_SECRET}
    ports:
      - "3001:3001"

volumes:
  pg_data: