// source: output.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() {
  if (this) { return this; }
  if (typeof window !== 'undefined') { return window; }
  if (typeof global !== 'undefined') { return global; }
  if (typeof self !== 'undefined') { return self; }
  return Function('return this')();
}.call(null));

goog.exportSymbol('proto.qed.schemas.output.AreaUpdate', null, global);
goog.exportSymbol('proto.qed.schemas.output.ChatMessage', null, global);
goog.exportSymbol('proto.qed.schemas.output.Exit', null, global);
goog.exportSymbol('proto.qed.schemas.output.OutputEvent', null, global);
goog.exportSymbol('proto.qed.schemas.output.OutputEvent.PayloadCase', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.qed.schemas.output.ChatMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.qed.schemas.output.ChatMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.qed.schemas.output.ChatMessage.displayName = 'proto.qed.schemas.output.ChatMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.qed.schemas.output.Exit = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.qed.schemas.output.Exit, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.qed.schemas.output.Exit.displayName = 'proto.qed.schemas.output.Exit';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.qed.schemas.output.AreaUpdate = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.qed.schemas.output.AreaUpdate.repeatedFields_, null);
};
goog.inherits(proto.qed.schemas.output.AreaUpdate, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.qed.schemas.output.AreaUpdate.displayName = 'proto.qed.schemas.output.AreaUpdate';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.qed.schemas.output.OutputEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.qed.schemas.output.OutputEvent.repeatedFields_, proto.qed.schemas.output.OutputEvent.oneofGroups_);
};
goog.inherits(proto.qed.schemas.output.OutputEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.qed.schemas.output.OutputEvent.displayName = 'proto.qed.schemas.output.OutputEvent';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.qed.schemas.output.ChatMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.qed.schemas.output.ChatMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.qed.schemas.output.ChatMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qed.schemas.output.ChatMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    senderName: jspb.Message.getFieldWithDefault(msg, 1, ""),
    content: jspb.Message.getFieldWithDefault(msg, 2, ""),
    messageType: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.qed.schemas.output.ChatMessage}
 */
proto.qed.schemas.output.ChatMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.qed.schemas.output.ChatMessage;
  return proto.qed.schemas.output.ChatMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.qed.schemas.output.ChatMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.qed.schemas.output.ChatMessage}
 */
proto.qed.schemas.output.ChatMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSenderName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setContent(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessageType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.qed.schemas.output.ChatMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.qed.schemas.output.ChatMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.qed.schemas.output.ChatMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qed.schemas.output.ChatMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSenderName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getContent();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getMessageType();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string sender_name = 1;
 * @return {string}
 */
proto.qed.schemas.output.ChatMessage.prototype.getSenderName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.qed.schemas.output.ChatMessage} returns this
 */
proto.qed.schemas.output.ChatMessage.prototype.setSenderName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string content = 2;
 * @return {string}
 */
proto.qed.schemas.output.ChatMessage.prototype.getContent = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.qed.schemas.output.ChatMessage} returns this
 */
proto.qed.schemas.output.ChatMessage.prototype.setContent = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string message_type = 3;
 * @return {string}
 */
proto.qed.schemas.output.ChatMessage.prototype.getMessageType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.qed.schemas.output.ChatMessage} returns this
 */
proto.qed.schemas.output.ChatMessage.prototype.setMessageType = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.qed.schemas.output.Exit.prototype.toObject = function(opt_includeInstance) {
  return proto.qed.schemas.output.Exit.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.qed.schemas.output.Exit} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qed.schemas.output.Exit.toObject = function(includeInstance, msg) {
  var f, obj = {
    direction: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.qed.schemas.output.Exit}
 */
proto.qed.schemas.output.Exit.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.qed.schemas.output.Exit;
  return proto.qed.schemas.output.Exit.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.qed.schemas.output.Exit} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.qed.schemas.output.Exit}
 */
proto.qed.schemas.output.Exit.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDirection(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.qed.schemas.output.Exit.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.qed.schemas.output.Exit.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.qed.schemas.output.Exit} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qed.schemas.output.Exit.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDirection();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string direction = 1;
 * @return {string}
 */
proto.qed.schemas.output.Exit.prototype.getDirection = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.qed.schemas.output.Exit} returns this
 */
proto.qed.schemas.output.Exit.prototype.setDirection = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.qed.schemas.output.AreaUpdate.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.qed.schemas.output.AreaUpdate.prototype.toObject = function(opt_includeInstance) {
  return proto.qed.schemas.output.AreaUpdate.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.qed.schemas.output.AreaUpdate} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qed.schemas.output.AreaUpdate.toObject = function(includeInstance, msg) {
  var f, obj = {
    areaId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    description: jspb.Message.getFieldWithDefault(msg, 3, ""),
    exitsList: jspb.Message.toObjectList(msg.getExitsList(),
    proto.qed.schemas.output.Exit.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.qed.schemas.output.AreaUpdate}
 */
proto.qed.schemas.output.AreaUpdate.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.qed.schemas.output.AreaUpdate;
  return proto.qed.schemas.output.AreaUpdate.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.qed.schemas.output.AreaUpdate} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.qed.schemas.output.AreaUpdate}
 */
proto.qed.schemas.output.AreaUpdate.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAreaId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 4:
      var value = new proto.qed.schemas.output.Exit;
      reader.readMessage(value,proto.qed.schemas.output.Exit.deserializeBinaryFromReader);
      msg.addExits(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.qed.schemas.output.AreaUpdate.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.qed.schemas.output.AreaUpdate.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.qed.schemas.output.AreaUpdate} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qed.schemas.output.AreaUpdate.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAreaId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getExitsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.qed.schemas.output.Exit.serializeBinaryToWriter
    );
  }
};


/**
 * optional string area_id = 1;
 * @return {string}
 */
proto.qed.schemas.output.AreaUpdate.prototype.getAreaId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.qed.schemas.output.AreaUpdate} returns this
 */
proto.qed.schemas.output.AreaUpdate.prototype.setAreaId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.qed.schemas.output.AreaUpdate.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.qed.schemas.output.AreaUpdate} returns this
 */
proto.qed.schemas.output.AreaUpdate.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string description = 3;
 * @return {string}
 */
proto.qed.schemas.output.AreaUpdate.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.qed.schemas.output.AreaUpdate} returns this
 */
proto.qed.schemas.output.AreaUpdate.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * repeated Exit exits = 4;
 * @return {!Array<!proto.qed.schemas.output.Exit>}
 */
proto.qed.schemas.output.AreaUpdate.prototype.getExitsList = function() {
  return /** @type{!Array<!proto.qed.schemas.output.Exit>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.qed.schemas.output.Exit, 4));
};


/**
 * @param {!Array<!proto.qed.schemas.output.Exit>} value
 * @return {!proto.qed.schemas.output.AreaUpdate} returns this
*/
proto.qed.schemas.output.AreaUpdate.prototype.setExitsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.qed.schemas.output.Exit=} opt_value
 * @param {number=} opt_index
 * @return {!proto.qed.schemas.output.Exit}
 */
proto.qed.schemas.output.AreaUpdate.prototype.addExits = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.qed.schemas.output.Exit, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.qed.schemas.output.AreaUpdate} returns this
 */
proto.qed.schemas.output.AreaUpdate.prototype.clearExitsList = function() {
  return this.setExitsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.qed.schemas.output.OutputEvent.repeatedFields_ = [1];

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.qed.schemas.output.OutputEvent.oneofGroups_ = [[3,4]];

/**
 * @enum {number}
 */
proto.qed.schemas.output.OutputEvent.PayloadCase = {
  PAYLOAD_NOT_SET: 0,
  CHAT_MESSAGE: 3,
  AREA_UPDATE: 4
};

/**
 * @return {proto.qed.schemas.output.OutputEvent.PayloadCase}
 */
proto.qed.schemas.output.OutputEvent.prototype.getPayloadCase = function() {
  return /** @type {proto.qed.schemas.output.OutputEvent.PayloadCase} */(jspb.Message.computeOneofCase(this, proto.qed.schemas.output.OutputEvent.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.qed.schemas.output.OutputEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.qed.schemas.output.OutputEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.qed.schemas.output.OutputEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qed.schemas.output.OutputEvent.toObject = function(includeInstance, msg) {
  var f, obj = {
    targetUserIdsList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f,
    chatMessage: (f = msg.getChatMessage()) && proto.qed.schemas.output.ChatMessage.toObject(includeInstance, f),
    areaUpdate: (f = msg.getAreaUpdate()) && proto.qed.schemas.output.AreaUpdate.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.qed.schemas.output.OutputEvent}
 */
proto.qed.schemas.output.OutputEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.qed.schemas.output.OutputEvent;
  return proto.qed.schemas.output.OutputEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.qed.schemas.output.OutputEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.qed.schemas.output.OutputEvent}
 */
proto.qed.schemas.output.OutputEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addTargetUserIds(value);
      break;
    case 3:
      var value = new proto.qed.schemas.output.ChatMessage;
      reader.readMessage(value,proto.qed.schemas.output.ChatMessage.deserializeBinaryFromReader);
      msg.setChatMessage(value);
      break;
    case 4:
      var value = new proto.qed.schemas.output.AreaUpdate;
      reader.readMessage(value,proto.qed.schemas.output.AreaUpdate.deserializeBinaryFromReader);
      msg.setAreaUpdate(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.qed.schemas.output.OutputEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.qed.schemas.output.OutputEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.qed.schemas.output.OutputEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qed.schemas.output.OutputEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTargetUserIdsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
  f = message.getChatMessage();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.qed.schemas.output.ChatMessage.serializeBinaryToWriter
    );
  }
  f = message.getAreaUpdate();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.qed.schemas.output.AreaUpdate.serializeBinaryToWriter
    );
  }
};


/**
 * repeated string target_user_ids = 1;
 * @return {!Array<string>}
 */
proto.qed.schemas.output.OutputEvent.prototype.getTargetUserIdsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.qed.schemas.output.OutputEvent} returns this
 */
proto.qed.schemas.output.OutputEvent.prototype.setTargetUserIdsList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.qed.schemas.output.OutputEvent} returns this
 */
proto.qed.schemas.output.OutputEvent.prototype.addTargetUserIds = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.qed.schemas.output.OutputEvent} returns this
 */
proto.qed.schemas.output.OutputEvent.prototype.clearTargetUserIdsList = function() {
  return this.setTargetUserIdsList([]);
};


/**
 * optional ChatMessage chat_message = 3;
 * @return {?proto.qed.schemas.output.ChatMessage}
 */
proto.qed.schemas.output.OutputEvent.prototype.getChatMessage = function() {
  return /** @type{?proto.qed.schemas.output.ChatMessage} */ (
    jspb.Message.getWrapperField(this, proto.qed.schemas.output.ChatMessage, 3));
};


/**
 * @param {?proto.qed.schemas.output.ChatMessage|undefined} value
 * @return {!proto.qed.schemas.output.OutputEvent} returns this
*/
proto.qed.schemas.output.OutputEvent.prototype.setChatMessage = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.qed.schemas.output.OutputEvent.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.qed.schemas.output.OutputEvent} returns this
 */
proto.qed.schemas.output.OutputEvent.prototype.clearChatMessage = function() {
  return this.setChatMessage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.qed.schemas.output.OutputEvent.prototype.hasChatMessage = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional AreaUpdate area_update = 4;
 * @return {?proto.qed.schemas.output.AreaUpdate}
 */
proto.qed.schemas.output.OutputEvent.prototype.getAreaUpdate = function() {
  return /** @type{?proto.qed.schemas.output.AreaUpdate} */ (
    jspb.Message.getWrapperField(this, proto.qed.schemas.output.AreaUpdate, 4));
};


/**
 * @param {?proto.qed.schemas.output.AreaUpdate|undefined} value
 * @return {!proto.qed.schemas.output.OutputEvent} returns this
*/
proto.qed.schemas.output.OutputEvent.prototype.setAreaUpdate = function(value) {
  return jspb.Message.setOneofWrapperField(this, 4, proto.qed.schemas.output.OutputEvent.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.qed.schemas.output.OutputEvent} returns this
 */
proto.qed.schemas.output.OutputEvent.prototype.clearAreaUpdate = function() {
  return this.setAreaUpdate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.qed.schemas.output.OutputEvent.prototype.hasAreaUpdate = function() {
  return jspb.Message.getField(this, 4) != null;
};


goog.object.extend(exports, proto.qed.schemas.output);
