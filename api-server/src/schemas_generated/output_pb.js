// source: output.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() {
  if (this) { return this; }
  if (typeof window !== 'undefined') { return window; }
  if (typeof global !== 'undefined') { return global; }
  if (typeof self !== 'undefined') { return self; }
  return Function('return this')();
}.call(null));

goog.exportSymbol('proto.qed.schemas.output.AreaItem', null, global);
goog.exportSymbol('proto.qed.schemas.output.AreaUpdate', null, global);
goog.exportSymbol('proto.qed.schemas.output.CharacterList', null, global);
goog.exportSymbol('proto.qed.schemas.output.CharacterSheet', null, global);
goog.exportSymbol('proto.qed.schemas.output.ChatHistory', null, global);
goog.exportSymbol('proto.qed.schemas.output.ChatMessage', null, global);
goog.exportSymbol('proto.qed.schemas.output.CoreAttributes', null, global);
goog.exportSymbol('proto.qed.schemas.output.DerivedStats', null, global);
goog.exportSymbol('proto.qed.schemas.output.EquipmentUpdate', null, global);
goog.exportSymbol('proto.qed.schemas.output.EquippedItem', null, global);
goog.exportSymbol('proto.qed.schemas.output.Exit', null, global);
goog.exportSymbol('proto.qed.schemas.output.InventoryItem', null, global);
goog.exportSymbol('proto.qed.schemas.output.InventoryList', null, global);
goog.exportSymbol('proto.qed.schemas.output.LevelUpNotification', null, global);
goog.exportSymbol('proto.qed.schemas.output.ListCharacter', null, global);
goog.exportSymbol('proto.qed.schemas.output.LoreCardAwarded', null, global);
goog.exportSymbol('proto.qed.schemas.output.LoreCardBonus', null, global);
goog.exportSymbol('proto.qed.schemas.output.LoreCardCollection', null, global);
goog.exportSymbol('proto.qed.schemas.output.LoreCardInstance', null, global);
goog.exportSymbol('proto.qed.schemas.output.MetricsReport', null, global);
goog.exportSymbol('proto.qed.schemas.output.OutputEvent', null, global);
goog.exportSymbol('proto.qed.schemas.output.OutputEvent.PayloadCase', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.qed.schemas.output.ChatMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.qed.schemas.output.ChatMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.qed.schemas.output.ChatMessage.displayName = 'proto.qed.schemas.output.ChatMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.qed.schemas.output.ChatHistory = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.qed.schemas.output.ChatHistory.repeatedFields_, null);
};
goog.inherits(proto.qed.schemas.output.ChatHistory, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.qed.schemas.output.ChatHistory.displayName = 'proto.qed.schemas.output.ChatHistory';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.qed.schemas.output.Exit = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.qed.schemas.output.Exit, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.qed.schemas.output.Exit.displayName = 'proto.qed.schemas.output.Exit';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.qed.schemas.output.AreaItem = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.qed.schemas.output.AreaItem, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.qed.schemas.output.AreaItem.displayName = 'proto.qed.schemas.output.AreaItem';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.qed.schemas.output.AreaUpdate = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.qed.schemas.output.AreaUpdate.repeatedFields_, null);
};
goog.inherits(proto.qed.schemas.output.AreaUpdate, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.qed.schemas.output.AreaUpdate.displayName = 'proto.qed.schemas.output.AreaUpdate';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.qed.schemas.output.ListCharacter = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.qed.schemas.output.ListCharacter, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.qed.schemas.output.ListCharacter.displayName = 'proto.qed.schemas.output.ListCharacter';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.qed.schemas.output.InventoryItem = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.qed.schemas.output.InventoryItem, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.qed.schemas.output.InventoryItem.displayName = 'proto.qed.schemas.output.InventoryItem';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.qed.schemas.output.InventoryList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.qed.schemas.output.InventoryList.repeatedFields_, null);
};
goog.inherits(proto.qed.schemas.output.InventoryList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.qed.schemas.output.InventoryList.displayName = 'proto.qed.schemas.output.InventoryList';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.qed.schemas.output.CharacterList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.qed.schemas.output.CharacterList.repeatedFields_, null);
};
goog.inherits(proto.qed.schemas.output.CharacterList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.qed.schemas.output.CharacterList.displayName = 'proto.qed.schemas.output.CharacterList';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.qed.schemas.output.CoreAttributes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.qed.schemas.output.CoreAttributes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.qed.schemas.output.CoreAttributes.displayName = 'proto.qed.schemas.output.CoreAttributes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.qed.schemas.output.DerivedStats = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.qed.schemas.output.DerivedStats, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.qed.schemas.output.DerivedStats.displayName = 'proto.qed.schemas.output.DerivedStats';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.qed.schemas.output.CharacterSheet = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.qed.schemas.output.CharacterSheet, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.qed.schemas.output.CharacterSheet.displayName = 'proto.qed.schemas.output.CharacterSheet';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.qed.schemas.output.EquippedItem = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.qed.schemas.output.EquippedItem, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.qed.schemas.output.EquippedItem.displayName = 'proto.qed.schemas.output.EquippedItem';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.qed.schemas.output.EquipmentUpdate = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.qed.schemas.output.EquipmentUpdate, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.qed.schemas.output.EquipmentUpdate.displayName = 'proto.qed.schemas.output.EquipmentUpdate';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.qed.schemas.output.MetricsReport = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.qed.schemas.output.MetricsReport, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.qed.schemas.output.MetricsReport.displayName = 'proto.qed.schemas.output.MetricsReport';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.qed.schemas.output.LoreCardInstance = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.qed.schemas.output.LoreCardInstance.repeatedFields_, null);
};
goog.inherits(proto.qed.schemas.output.LoreCardInstance, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.qed.schemas.output.LoreCardInstance.displayName = 'proto.qed.schemas.output.LoreCardInstance';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.qed.schemas.output.LoreCardBonus = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.qed.schemas.output.LoreCardBonus, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.qed.schemas.output.LoreCardBonus.displayName = 'proto.qed.schemas.output.LoreCardBonus';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.qed.schemas.output.LoreCardCollection = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.qed.schemas.output.LoreCardCollection.repeatedFields_, null);
};
goog.inherits(proto.qed.schemas.output.LoreCardCollection, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.qed.schemas.output.LoreCardCollection.displayName = 'proto.qed.schemas.output.LoreCardCollection';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.qed.schemas.output.LevelUpNotification = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.qed.schemas.output.LevelUpNotification, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.qed.schemas.output.LevelUpNotification.displayName = 'proto.qed.schemas.output.LevelUpNotification';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.qed.schemas.output.LoreCardAwarded = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.qed.schemas.output.LoreCardAwarded, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.qed.schemas.output.LoreCardAwarded.displayName = 'proto.qed.schemas.output.LoreCardAwarded';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.qed.schemas.output.OutputEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.qed.schemas.output.OutputEvent.repeatedFields_, proto.qed.schemas.output.OutputEvent.oneofGroups_);
};
goog.inherits(proto.qed.schemas.output.OutputEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.qed.schemas.output.OutputEvent.displayName = 'proto.qed.schemas.output.OutputEvent';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.qed.schemas.output.ChatMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.qed.schemas.output.ChatMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.qed.schemas.output.ChatMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qed.schemas.output.ChatMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    senderName: jspb.Message.getFieldWithDefault(msg, 1, ""),
    content: jspb.Message.getFieldWithDefault(msg, 2, ""),
    messageType: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.qed.schemas.output.ChatMessage}
 */
proto.qed.schemas.output.ChatMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.qed.schemas.output.ChatMessage;
  return proto.qed.schemas.output.ChatMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.qed.schemas.output.ChatMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.qed.schemas.output.ChatMessage}
 */
proto.qed.schemas.output.ChatMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSenderName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setContent(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessageType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.qed.schemas.output.ChatMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.qed.schemas.output.ChatMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.qed.schemas.output.ChatMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qed.schemas.output.ChatMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSenderName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getContent();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getMessageType();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string sender_name = 1;
 * @return {string}
 */
proto.qed.schemas.output.ChatMessage.prototype.getSenderName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.qed.schemas.output.ChatMessage} returns this
 */
proto.qed.schemas.output.ChatMessage.prototype.setSenderName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string content = 2;
 * @return {string}
 */
proto.qed.schemas.output.ChatMessage.prototype.getContent = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.qed.schemas.output.ChatMessage} returns this
 */
proto.qed.schemas.output.ChatMessage.prototype.setContent = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string message_type = 3;
 * @return {string}
 */
proto.qed.schemas.output.ChatMessage.prototype.getMessageType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.qed.schemas.output.ChatMessage} returns this
 */
proto.qed.schemas.output.ChatMessage.prototype.setMessageType = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.qed.schemas.output.ChatHistory.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.qed.schemas.output.ChatHistory.prototype.toObject = function(opt_includeInstance) {
  return proto.qed.schemas.output.ChatHistory.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.qed.schemas.output.ChatHistory} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qed.schemas.output.ChatHistory.toObject = function(includeInstance, msg) {
  var f, obj = {
    messagesList: jspb.Message.toObjectList(msg.getMessagesList(),
    proto.qed.schemas.output.ChatMessage.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.qed.schemas.output.ChatHistory}
 */
proto.qed.schemas.output.ChatHistory.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.qed.schemas.output.ChatHistory;
  return proto.qed.schemas.output.ChatHistory.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.qed.schemas.output.ChatHistory} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.qed.schemas.output.ChatHistory}
 */
proto.qed.schemas.output.ChatHistory.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.qed.schemas.output.ChatMessage;
      reader.readMessage(value,proto.qed.schemas.output.ChatMessage.deserializeBinaryFromReader);
      msg.addMessages(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.qed.schemas.output.ChatHistory.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.qed.schemas.output.ChatHistory.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.qed.schemas.output.ChatHistory} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qed.schemas.output.ChatHistory.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMessagesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.qed.schemas.output.ChatMessage.serializeBinaryToWriter
    );
  }
};


/**
 * repeated ChatMessage messages = 1;
 * @return {!Array<!proto.qed.schemas.output.ChatMessage>}
 */
proto.qed.schemas.output.ChatHistory.prototype.getMessagesList = function() {
  return /** @type{!Array<!proto.qed.schemas.output.ChatMessage>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.qed.schemas.output.ChatMessage, 1));
};


/**
 * @param {!Array<!proto.qed.schemas.output.ChatMessage>} value
 * @return {!proto.qed.schemas.output.ChatHistory} returns this
*/
proto.qed.schemas.output.ChatHistory.prototype.setMessagesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.qed.schemas.output.ChatMessage=} opt_value
 * @param {number=} opt_index
 * @return {!proto.qed.schemas.output.ChatMessage}
 */
proto.qed.schemas.output.ChatHistory.prototype.addMessages = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.qed.schemas.output.ChatMessage, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.qed.schemas.output.ChatHistory} returns this
 */
proto.qed.schemas.output.ChatHistory.prototype.clearMessagesList = function() {
  return this.setMessagesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.qed.schemas.output.Exit.prototype.toObject = function(opt_includeInstance) {
  return proto.qed.schemas.output.Exit.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.qed.schemas.output.Exit} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qed.schemas.output.Exit.toObject = function(includeInstance, msg) {
  var f, obj = {
    direction: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.qed.schemas.output.Exit}
 */
proto.qed.schemas.output.Exit.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.qed.schemas.output.Exit;
  return proto.qed.schemas.output.Exit.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.qed.schemas.output.Exit} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.qed.schemas.output.Exit}
 */
proto.qed.schemas.output.Exit.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDirection(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.qed.schemas.output.Exit.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.qed.schemas.output.Exit.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.qed.schemas.output.Exit} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qed.schemas.output.Exit.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDirection();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string direction = 1;
 * @return {string}
 */
proto.qed.schemas.output.Exit.prototype.getDirection = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.qed.schemas.output.Exit} returns this
 */
proto.qed.schemas.output.Exit.prototype.setDirection = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.qed.schemas.output.AreaItem.prototype.toObject = function(opt_includeInstance) {
  return proto.qed.schemas.output.AreaItem.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.qed.schemas.output.AreaItem} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qed.schemas.output.AreaItem.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.qed.schemas.output.AreaItem}
 */
proto.qed.schemas.output.AreaItem.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.qed.schemas.output.AreaItem;
  return proto.qed.schemas.output.AreaItem.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.qed.schemas.output.AreaItem} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.qed.schemas.output.AreaItem}
 */
proto.qed.schemas.output.AreaItem.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.qed.schemas.output.AreaItem.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.qed.schemas.output.AreaItem.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.qed.schemas.output.AreaItem} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qed.schemas.output.AreaItem.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.qed.schemas.output.AreaItem.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.qed.schemas.output.AreaItem} returns this
 */
proto.qed.schemas.output.AreaItem.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.qed.schemas.output.AreaItem.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.qed.schemas.output.AreaItem} returns this
 */
proto.qed.schemas.output.AreaItem.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.qed.schemas.output.AreaUpdate.repeatedFields_ = [4,5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.qed.schemas.output.AreaUpdate.prototype.toObject = function(opt_includeInstance) {
  return proto.qed.schemas.output.AreaUpdate.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.qed.schemas.output.AreaUpdate} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qed.schemas.output.AreaUpdate.toObject = function(includeInstance, msg) {
  var f, obj = {
    areaId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    description: jspb.Message.getFieldWithDefault(msg, 3, ""),
    exitsList: jspb.Message.toObjectList(msg.getExitsList(),
    proto.qed.schemas.output.Exit.toObject, includeInstance),
    itemsList: jspb.Message.toObjectList(msg.getItemsList(),
    proto.qed.schemas.output.AreaItem.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.qed.schemas.output.AreaUpdate}
 */
proto.qed.schemas.output.AreaUpdate.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.qed.schemas.output.AreaUpdate;
  return proto.qed.schemas.output.AreaUpdate.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.qed.schemas.output.AreaUpdate} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.qed.schemas.output.AreaUpdate}
 */
proto.qed.schemas.output.AreaUpdate.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAreaId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 4:
      var value = new proto.qed.schemas.output.Exit;
      reader.readMessage(value,proto.qed.schemas.output.Exit.deserializeBinaryFromReader);
      msg.addExits(value);
      break;
    case 5:
      var value = new proto.qed.schemas.output.AreaItem;
      reader.readMessage(value,proto.qed.schemas.output.AreaItem.deserializeBinaryFromReader);
      msg.addItems(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.qed.schemas.output.AreaUpdate.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.qed.schemas.output.AreaUpdate.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.qed.schemas.output.AreaUpdate} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qed.schemas.output.AreaUpdate.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAreaId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getExitsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.qed.schemas.output.Exit.serializeBinaryToWriter
    );
  }
  f = message.getItemsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      proto.qed.schemas.output.AreaItem.serializeBinaryToWriter
    );
  }
};


/**
 * optional string area_id = 1;
 * @return {string}
 */
proto.qed.schemas.output.AreaUpdate.prototype.getAreaId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.qed.schemas.output.AreaUpdate} returns this
 */
proto.qed.schemas.output.AreaUpdate.prototype.setAreaId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.qed.schemas.output.AreaUpdate.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.qed.schemas.output.AreaUpdate} returns this
 */
proto.qed.schemas.output.AreaUpdate.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string description = 3;
 * @return {string}
 */
proto.qed.schemas.output.AreaUpdate.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.qed.schemas.output.AreaUpdate} returns this
 */
proto.qed.schemas.output.AreaUpdate.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * repeated Exit exits = 4;
 * @return {!Array<!proto.qed.schemas.output.Exit>}
 */
proto.qed.schemas.output.AreaUpdate.prototype.getExitsList = function() {
  return /** @type{!Array<!proto.qed.schemas.output.Exit>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.qed.schemas.output.Exit, 4));
};


/**
 * @param {!Array<!proto.qed.schemas.output.Exit>} value
 * @return {!proto.qed.schemas.output.AreaUpdate} returns this
*/
proto.qed.schemas.output.AreaUpdate.prototype.setExitsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.qed.schemas.output.Exit=} opt_value
 * @param {number=} opt_index
 * @return {!proto.qed.schemas.output.Exit}
 */
proto.qed.schemas.output.AreaUpdate.prototype.addExits = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.qed.schemas.output.Exit, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.qed.schemas.output.AreaUpdate} returns this
 */
proto.qed.schemas.output.AreaUpdate.prototype.clearExitsList = function() {
  return this.setExitsList([]);
};


/**
 * repeated AreaItem items = 5;
 * @return {!Array<!proto.qed.schemas.output.AreaItem>}
 */
proto.qed.schemas.output.AreaUpdate.prototype.getItemsList = function() {
  return /** @type{!Array<!proto.qed.schemas.output.AreaItem>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.qed.schemas.output.AreaItem, 5));
};


/**
 * @param {!Array<!proto.qed.schemas.output.AreaItem>} value
 * @return {!proto.qed.schemas.output.AreaUpdate} returns this
*/
proto.qed.schemas.output.AreaUpdate.prototype.setItemsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.qed.schemas.output.AreaItem=} opt_value
 * @param {number=} opt_index
 * @return {!proto.qed.schemas.output.AreaItem}
 */
proto.qed.schemas.output.AreaUpdate.prototype.addItems = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.qed.schemas.output.AreaItem, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.qed.schemas.output.AreaUpdate} returns this
 */
proto.qed.schemas.output.AreaUpdate.prototype.clearItemsList = function() {
  return this.setItemsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.qed.schemas.output.ListCharacter.prototype.toObject = function(opt_includeInstance) {
  return proto.qed.schemas.output.ListCharacter.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.qed.schemas.output.ListCharacter} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qed.schemas.output.ListCharacter.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.qed.schemas.output.ListCharacter}
 */
proto.qed.schemas.output.ListCharacter.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.qed.schemas.output.ListCharacter;
  return proto.qed.schemas.output.ListCharacter.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.qed.schemas.output.ListCharacter} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.qed.schemas.output.ListCharacter}
 */
proto.qed.schemas.output.ListCharacter.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.qed.schemas.output.ListCharacter.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.qed.schemas.output.ListCharacter.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.qed.schemas.output.ListCharacter} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qed.schemas.output.ListCharacter.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.qed.schemas.output.ListCharacter.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.qed.schemas.output.ListCharacter} returns this
 */
proto.qed.schemas.output.ListCharacter.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.qed.schemas.output.ListCharacter.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.qed.schemas.output.ListCharacter} returns this
 */
proto.qed.schemas.output.ListCharacter.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.qed.schemas.output.InventoryItem.prototype.toObject = function(opt_includeInstance) {
  return proto.qed.schemas.output.InventoryItem.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.qed.schemas.output.InventoryItem} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qed.schemas.output.InventoryItem.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    description: jspb.Message.getFieldWithDefault(msg, 3, ""),
    quantity: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.qed.schemas.output.InventoryItem}
 */
proto.qed.schemas.output.InventoryItem.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.qed.schemas.output.InventoryItem;
  return proto.qed.schemas.output.InventoryItem.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.qed.schemas.output.InventoryItem} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.qed.schemas.output.InventoryItem}
 */
proto.qed.schemas.output.InventoryItem.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setQuantity(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.qed.schemas.output.InventoryItem.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.qed.schemas.output.InventoryItem.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.qed.schemas.output.InventoryItem} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qed.schemas.output.InventoryItem.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getQuantity();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.qed.schemas.output.InventoryItem.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.qed.schemas.output.InventoryItem} returns this
 */
proto.qed.schemas.output.InventoryItem.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.qed.schemas.output.InventoryItem.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.qed.schemas.output.InventoryItem} returns this
 */
proto.qed.schemas.output.InventoryItem.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string description = 3;
 * @return {string}
 */
proto.qed.schemas.output.InventoryItem.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.qed.schemas.output.InventoryItem} returns this
 */
proto.qed.schemas.output.InventoryItem.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional int32 quantity = 4;
 * @return {number}
 */
proto.qed.schemas.output.InventoryItem.prototype.getQuantity = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.qed.schemas.output.InventoryItem} returns this
 */
proto.qed.schemas.output.InventoryItem.prototype.setQuantity = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.qed.schemas.output.InventoryList.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.qed.schemas.output.InventoryList.prototype.toObject = function(opt_includeInstance) {
  return proto.qed.schemas.output.InventoryList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.qed.schemas.output.InventoryList} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qed.schemas.output.InventoryList.toObject = function(includeInstance, msg) {
  var f, obj = {
    itemsList: jspb.Message.toObjectList(msg.getItemsList(),
    proto.qed.schemas.output.InventoryItem.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.qed.schemas.output.InventoryList}
 */
proto.qed.schemas.output.InventoryList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.qed.schemas.output.InventoryList;
  return proto.qed.schemas.output.InventoryList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.qed.schemas.output.InventoryList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.qed.schemas.output.InventoryList}
 */
proto.qed.schemas.output.InventoryList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.qed.schemas.output.InventoryItem;
      reader.readMessage(value,proto.qed.schemas.output.InventoryItem.deserializeBinaryFromReader);
      msg.addItems(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.qed.schemas.output.InventoryList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.qed.schemas.output.InventoryList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.qed.schemas.output.InventoryList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qed.schemas.output.InventoryList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getItemsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.qed.schemas.output.InventoryItem.serializeBinaryToWriter
    );
  }
};


/**
 * repeated InventoryItem items = 1;
 * @return {!Array<!proto.qed.schemas.output.InventoryItem>}
 */
proto.qed.schemas.output.InventoryList.prototype.getItemsList = function() {
  return /** @type{!Array<!proto.qed.schemas.output.InventoryItem>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.qed.schemas.output.InventoryItem, 1));
};


/**
 * @param {!Array<!proto.qed.schemas.output.InventoryItem>} value
 * @return {!proto.qed.schemas.output.InventoryList} returns this
*/
proto.qed.schemas.output.InventoryList.prototype.setItemsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.qed.schemas.output.InventoryItem=} opt_value
 * @param {number=} opt_index
 * @return {!proto.qed.schemas.output.InventoryItem}
 */
proto.qed.schemas.output.InventoryList.prototype.addItems = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.qed.schemas.output.InventoryItem, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.qed.schemas.output.InventoryList} returns this
 */
proto.qed.schemas.output.InventoryList.prototype.clearItemsList = function() {
  return this.setItemsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.qed.schemas.output.CharacterList.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.qed.schemas.output.CharacterList.prototype.toObject = function(opt_includeInstance) {
  return proto.qed.schemas.output.CharacterList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.qed.schemas.output.CharacterList} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qed.schemas.output.CharacterList.toObject = function(includeInstance, msg) {
  var f, obj = {
    charactersList: jspb.Message.toObjectList(msg.getCharactersList(),
    proto.qed.schemas.output.ListCharacter.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.qed.schemas.output.CharacterList}
 */
proto.qed.schemas.output.CharacterList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.qed.schemas.output.CharacterList;
  return proto.qed.schemas.output.CharacterList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.qed.schemas.output.CharacterList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.qed.schemas.output.CharacterList}
 */
proto.qed.schemas.output.CharacterList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.qed.schemas.output.ListCharacter;
      reader.readMessage(value,proto.qed.schemas.output.ListCharacter.deserializeBinaryFromReader);
      msg.addCharacters(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.qed.schemas.output.CharacterList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.qed.schemas.output.CharacterList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.qed.schemas.output.CharacterList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qed.schemas.output.CharacterList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCharactersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.qed.schemas.output.ListCharacter.serializeBinaryToWriter
    );
  }
};


/**
 * repeated ListCharacter characters = 1;
 * @return {!Array<!proto.qed.schemas.output.ListCharacter>}
 */
proto.qed.schemas.output.CharacterList.prototype.getCharactersList = function() {
  return /** @type{!Array<!proto.qed.schemas.output.ListCharacter>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.qed.schemas.output.ListCharacter, 1));
};


/**
 * @param {!Array<!proto.qed.schemas.output.ListCharacter>} value
 * @return {!proto.qed.schemas.output.CharacterList} returns this
*/
proto.qed.schemas.output.CharacterList.prototype.setCharactersList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.qed.schemas.output.ListCharacter=} opt_value
 * @param {number=} opt_index
 * @return {!proto.qed.schemas.output.ListCharacter}
 */
proto.qed.schemas.output.CharacterList.prototype.addCharacters = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.qed.schemas.output.ListCharacter, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.qed.schemas.output.CharacterList} returns this
 */
proto.qed.schemas.output.CharacterList.prototype.clearCharactersList = function() {
  return this.setCharactersList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.qed.schemas.output.CoreAttributes.prototype.toObject = function(opt_includeInstance) {
  return proto.qed.schemas.output.CoreAttributes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.qed.schemas.output.CoreAttributes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qed.schemas.output.CoreAttributes.toObject = function(includeInstance, msg) {
  var f, obj = {
    might: jspb.Message.getFieldWithDefault(msg, 1, 0),
    finesse: jspb.Message.getFieldWithDefault(msg, 2, 0),
    wits: jspb.Message.getFieldWithDefault(msg, 3, 0),
    grit: jspb.Message.getFieldWithDefault(msg, 4, 0),
    presence: jspb.Message.getFieldWithDefault(msg, 5, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.qed.schemas.output.CoreAttributes}
 */
proto.qed.schemas.output.CoreAttributes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.qed.schemas.output.CoreAttributes;
  return proto.qed.schemas.output.CoreAttributes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.qed.schemas.output.CoreAttributes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.qed.schemas.output.CoreAttributes}
 */
proto.qed.schemas.output.CoreAttributes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMight(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setFinesse(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setWits(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setGrit(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPresence(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.qed.schemas.output.CoreAttributes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.qed.schemas.output.CoreAttributes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.qed.schemas.output.CoreAttributes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qed.schemas.output.CoreAttributes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMight();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getFinesse();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getWits();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getGrit();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getPresence();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
};


/**
 * optional int32 might = 1;
 * @return {number}
 */
proto.qed.schemas.output.CoreAttributes.prototype.getMight = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.qed.schemas.output.CoreAttributes} returns this
 */
proto.qed.schemas.output.CoreAttributes.prototype.setMight = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 finesse = 2;
 * @return {number}
 */
proto.qed.schemas.output.CoreAttributes.prototype.getFinesse = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.qed.schemas.output.CoreAttributes} returns this
 */
proto.qed.schemas.output.CoreAttributes.prototype.setFinesse = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 wits = 3;
 * @return {number}
 */
proto.qed.schemas.output.CoreAttributes.prototype.getWits = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.qed.schemas.output.CoreAttributes} returns this
 */
proto.qed.schemas.output.CoreAttributes.prototype.setWits = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int32 grit = 4;
 * @return {number}
 */
proto.qed.schemas.output.CoreAttributes.prototype.getGrit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.qed.schemas.output.CoreAttributes} returns this
 */
proto.qed.schemas.output.CoreAttributes.prototype.setGrit = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int32 presence = 5;
 * @return {number}
 */
proto.qed.schemas.output.CoreAttributes.prototype.getPresence = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.qed.schemas.output.CoreAttributes} returns this
 */
proto.qed.schemas.output.CoreAttributes.prototype.setPresence = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.qed.schemas.output.DerivedStats.prototype.toObject = function(opt_includeInstance) {
  return proto.qed.schemas.output.DerivedStats.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.qed.schemas.output.DerivedStats} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qed.schemas.output.DerivedStats.toObject = function(includeInstance, msg) {
  var f, obj = {
    physicalPower: jspb.Message.getFieldWithDefault(msg, 1, 0),
    spellPower: jspb.Message.getFieldWithDefault(msg, 2, 0),
    accuracy: jspb.Message.getFieldWithDefault(msg, 3, 0),
    evasion: jspb.Message.getFieldWithDefault(msg, 4, 0),
    armor: jspb.Message.getFieldWithDefault(msg, 5, 0),
    resolve: jspb.Message.getFieldWithDefault(msg, 6, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.qed.schemas.output.DerivedStats}
 */
proto.qed.schemas.output.DerivedStats.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.qed.schemas.output.DerivedStats;
  return proto.qed.schemas.output.DerivedStats.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.qed.schemas.output.DerivedStats} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.qed.schemas.output.DerivedStats}
 */
proto.qed.schemas.output.DerivedStats.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPhysicalPower(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSpellPower(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setAccuracy(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setEvasion(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setArmor(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setResolve(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.qed.schemas.output.DerivedStats.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.qed.schemas.output.DerivedStats.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.qed.schemas.output.DerivedStats} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qed.schemas.output.DerivedStats.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPhysicalPower();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getSpellPower();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getAccuracy();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getEvasion();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getArmor();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getResolve();
  if (f !== 0) {
    writer.writeInt32(
      6,
      f
    );
  }
};


/**
 * optional int32 physical_power = 1;
 * @return {number}
 */
proto.qed.schemas.output.DerivedStats.prototype.getPhysicalPower = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.qed.schemas.output.DerivedStats} returns this
 */
proto.qed.schemas.output.DerivedStats.prototype.setPhysicalPower = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 spell_power = 2;
 * @return {number}
 */
proto.qed.schemas.output.DerivedStats.prototype.getSpellPower = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.qed.schemas.output.DerivedStats} returns this
 */
proto.qed.schemas.output.DerivedStats.prototype.setSpellPower = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 accuracy = 3;
 * @return {number}
 */
proto.qed.schemas.output.DerivedStats.prototype.getAccuracy = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.qed.schemas.output.DerivedStats} returns this
 */
proto.qed.schemas.output.DerivedStats.prototype.setAccuracy = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int32 evasion = 4;
 * @return {number}
 */
proto.qed.schemas.output.DerivedStats.prototype.getEvasion = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.qed.schemas.output.DerivedStats} returns this
 */
proto.qed.schemas.output.DerivedStats.prototype.setEvasion = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int32 armor = 5;
 * @return {number}
 */
proto.qed.schemas.output.DerivedStats.prototype.getArmor = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.qed.schemas.output.DerivedStats} returns this
 */
proto.qed.schemas.output.DerivedStats.prototype.setArmor = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional int32 resolve = 6;
 * @return {number}
 */
proto.qed.schemas.output.DerivedStats.prototype.getResolve = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.qed.schemas.output.DerivedStats} returns this
 */
proto.qed.schemas.output.DerivedStats.prototype.setResolve = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.qed.schemas.output.CharacterSheet.prototype.toObject = function(opt_includeInstance) {
  return proto.qed.schemas.output.CharacterSheet.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.qed.schemas.output.CharacterSheet} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qed.schemas.output.CharacterSheet.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    health: jspb.Message.getFieldWithDefault(msg, 3, 0),
    maxHealth: jspb.Message.getFieldWithDefault(msg, 4, 0),
    actionPoints: jspb.Message.getFieldWithDefault(msg, 5, 0),
    maxActionPoints: jspb.Message.getFieldWithDefault(msg, 6, 0),
    coreAttributes: (f = msg.getCoreAttributes()) && proto.qed.schemas.output.CoreAttributes.toObject(includeInstance, f),
    derivedStats: (f = msg.getDerivedStats()) && proto.qed.schemas.output.DerivedStats.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.qed.schemas.output.CharacterSheet}
 */
proto.qed.schemas.output.CharacterSheet.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.qed.schemas.output.CharacterSheet;
  return proto.qed.schemas.output.CharacterSheet.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.qed.schemas.output.CharacterSheet} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.qed.schemas.output.CharacterSheet}
 */
proto.qed.schemas.output.CharacterSheet.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setHealth(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMaxHealth(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setActionPoints(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMaxActionPoints(value);
      break;
    case 7:
      var value = new proto.qed.schemas.output.CoreAttributes;
      reader.readMessage(value,proto.qed.schemas.output.CoreAttributes.deserializeBinaryFromReader);
      msg.setCoreAttributes(value);
      break;
    case 8:
      var value = new proto.qed.schemas.output.DerivedStats;
      reader.readMessage(value,proto.qed.schemas.output.DerivedStats.deserializeBinaryFromReader);
      msg.setDerivedStats(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.qed.schemas.output.CharacterSheet.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.qed.schemas.output.CharacterSheet.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.qed.schemas.output.CharacterSheet} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qed.schemas.output.CharacterSheet.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getHealth();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getMaxHealth();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getActionPoints();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getMaxActionPoints();
  if (f !== 0) {
    writer.writeInt32(
      6,
      f
    );
  }
  f = message.getCoreAttributes();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.qed.schemas.output.CoreAttributes.serializeBinaryToWriter
    );
  }
  f = message.getDerivedStats();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.qed.schemas.output.DerivedStats.serializeBinaryToWriter
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.qed.schemas.output.CharacterSheet.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.qed.schemas.output.CharacterSheet} returns this
 */
proto.qed.schemas.output.CharacterSheet.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.qed.schemas.output.CharacterSheet.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.qed.schemas.output.CharacterSheet} returns this
 */
proto.qed.schemas.output.CharacterSheet.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int32 health = 3;
 * @return {number}
 */
proto.qed.schemas.output.CharacterSheet.prototype.getHealth = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.qed.schemas.output.CharacterSheet} returns this
 */
proto.qed.schemas.output.CharacterSheet.prototype.setHealth = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int32 max_health = 4;
 * @return {number}
 */
proto.qed.schemas.output.CharacterSheet.prototype.getMaxHealth = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.qed.schemas.output.CharacterSheet} returns this
 */
proto.qed.schemas.output.CharacterSheet.prototype.setMaxHealth = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int32 action_points = 5;
 * @return {number}
 */
proto.qed.schemas.output.CharacterSheet.prototype.getActionPoints = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.qed.schemas.output.CharacterSheet} returns this
 */
proto.qed.schemas.output.CharacterSheet.prototype.setActionPoints = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional int32 max_action_points = 6;
 * @return {number}
 */
proto.qed.schemas.output.CharacterSheet.prototype.getMaxActionPoints = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.qed.schemas.output.CharacterSheet} returns this
 */
proto.qed.schemas.output.CharacterSheet.prototype.setMaxActionPoints = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional CoreAttributes core_attributes = 7;
 * @return {?proto.qed.schemas.output.CoreAttributes}
 */
proto.qed.schemas.output.CharacterSheet.prototype.getCoreAttributes = function() {
  return /** @type{?proto.qed.schemas.output.CoreAttributes} */ (
    jspb.Message.getWrapperField(this, proto.qed.schemas.output.CoreAttributes, 7));
};


/**
 * @param {?proto.qed.schemas.output.CoreAttributes|undefined} value
 * @return {!proto.qed.schemas.output.CharacterSheet} returns this
*/
proto.qed.schemas.output.CharacterSheet.prototype.setCoreAttributes = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.qed.schemas.output.CharacterSheet} returns this
 */
proto.qed.schemas.output.CharacterSheet.prototype.clearCoreAttributes = function() {
  return this.setCoreAttributes(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.qed.schemas.output.CharacterSheet.prototype.hasCoreAttributes = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional DerivedStats derived_stats = 8;
 * @return {?proto.qed.schemas.output.DerivedStats}
 */
proto.qed.schemas.output.CharacterSheet.prototype.getDerivedStats = function() {
  return /** @type{?proto.qed.schemas.output.DerivedStats} */ (
    jspb.Message.getWrapperField(this, proto.qed.schemas.output.DerivedStats, 8));
};


/**
 * @param {?proto.qed.schemas.output.DerivedStats|undefined} value
 * @return {!proto.qed.schemas.output.CharacterSheet} returns this
*/
proto.qed.schemas.output.CharacterSheet.prototype.setDerivedStats = function(value) {
  return jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.qed.schemas.output.CharacterSheet} returns this
 */
proto.qed.schemas.output.CharacterSheet.prototype.clearDerivedStats = function() {
  return this.setDerivedStats(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.qed.schemas.output.CharacterSheet.prototype.hasDerivedStats = function() {
  return jspb.Message.getField(this, 8) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.qed.schemas.output.EquippedItem.prototype.toObject = function(opt_includeInstance) {
  return proto.qed.schemas.output.EquippedItem.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.qed.schemas.output.EquippedItem} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qed.schemas.output.EquippedItem.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.qed.schemas.output.EquippedItem}
 */
proto.qed.schemas.output.EquippedItem.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.qed.schemas.output.EquippedItem;
  return proto.qed.schemas.output.EquippedItem.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.qed.schemas.output.EquippedItem} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.qed.schemas.output.EquippedItem}
 */
proto.qed.schemas.output.EquippedItem.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.qed.schemas.output.EquippedItem.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.qed.schemas.output.EquippedItem.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.qed.schemas.output.EquippedItem} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qed.schemas.output.EquippedItem.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.qed.schemas.output.EquippedItem.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.qed.schemas.output.EquippedItem} returns this
 */
proto.qed.schemas.output.EquippedItem.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.qed.schemas.output.EquippedItem.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.qed.schemas.output.EquippedItem} returns this
 */
proto.qed.schemas.output.EquippedItem.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.qed.schemas.output.EquipmentUpdate.prototype.toObject = function(opt_includeInstance) {
  return proto.qed.schemas.output.EquipmentUpdate.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.qed.schemas.output.EquipmentUpdate} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qed.schemas.output.EquipmentUpdate.toObject = function(includeInstance, msg) {
  var f, obj = {
    mainHand: (f = msg.getMainHand()) && proto.qed.schemas.output.EquippedItem.toObject(includeInstance, f),
    offHand: (f = msg.getOffHand()) && proto.qed.schemas.output.EquippedItem.toObject(includeInstance, f),
    head: (f = msg.getHead()) && proto.qed.schemas.output.EquippedItem.toObject(includeInstance, f),
    chest: (f = msg.getChest()) && proto.qed.schemas.output.EquippedItem.toObject(includeInstance, f),
    legs: (f = msg.getLegs()) && proto.qed.schemas.output.EquippedItem.toObject(includeInstance, f),
    feet: (f = msg.getFeet()) && proto.qed.schemas.output.EquippedItem.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.qed.schemas.output.EquipmentUpdate}
 */
proto.qed.schemas.output.EquipmentUpdate.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.qed.schemas.output.EquipmentUpdate;
  return proto.qed.schemas.output.EquipmentUpdate.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.qed.schemas.output.EquipmentUpdate} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.qed.schemas.output.EquipmentUpdate}
 */
proto.qed.schemas.output.EquipmentUpdate.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.qed.schemas.output.EquippedItem;
      reader.readMessage(value,proto.qed.schemas.output.EquippedItem.deserializeBinaryFromReader);
      msg.setMainHand(value);
      break;
    case 2:
      var value = new proto.qed.schemas.output.EquippedItem;
      reader.readMessage(value,proto.qed.schemas.output.EquippedItem.deserializeBinaryFromReader);
      msg.setOffHand(value);
      break;
    case 3:
      var value = new proto.qed.schemas.output.EquippedItem;
      reader.readMessage(value,proto.qed.schemas.output.EquippedItem.deserializeBinaryFromReader);
      msg.setHead(value);
      break;
    case 4:
      var value = new proto.qed.schemas.output.EquippedItem;
      reader.readMessage(value,proto.qed.schemas.output.EquippedItem.deserializeBinaryFromReader);
      msg.setChest(value);
      break;
    case 5:
      var value = new proto.qed.schemas.output.EquippedItem;
      reader.readMessage(value,proto.qed.schemas.output.EquippedItem.deserializeBinaryFromReader);
      msg.setLegs(value);
      break;
    case 6:
      var value = new proto.qed.schemas.output.EquippedItem;
      reader.readMessage(value,proto.qed.schemas.output.EquippedItem.deserializeBinaryFromReader);
      msg.setFeet(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.qed.schemas.output.EquipmentUpdate.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.qed.schemas.output.EquipmentUpdate.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.qed.schemas.output.EquipmentUpdate} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qed.schemas.output.EquipmentUpdate.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMainHand();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.qed.schemas.output.EquippedItem.serializeBinaryToWriter
    );
  }
  f = message.getOffHand();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.qed.schemas.output.EquippedItem.serializeBinaryToWriter
    );
  }
  f = message.getHead();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.qed.schemas.output.EquippedItem.serializeBinaryToWriter
    );
  }
  f = message.getChest();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.qed.schemas.output.EquippedItem.serializeBinaryToWriter
    );
  }
  f = message.getLegs();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.qed.schemas.output.EquippedItem.serializeBinaryToWriter
    );
  }
  f = message.getFeet();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.qed.schemas.output.EquippedItem.serializeBinaryToWriter
    );
  }
};


/**
 * optional EquippedItem main_hand = 1;
 * @return {?proto.qed.schemas.output.EquippedItem}
 */
proto.qed.schemas.output.EquipmentUpdate.prototype.getMainHand = function() {
  return /** @type{?proto.qed.schemas.output.EquippedItem} */ (
    jspb.Message.getWrapperField(this, proto.qed.schemas.output.EquippedItem, 1));
};


/**
 * @param {?proto.qed.schemas.output.EquippedItem|undefined} value
 * @return {!proto.qed.schemas.output.EquipmentUpdate} returns this
*/
proto.qed.schemas.output.EquipmentUpdate.prototype.setMainHand = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.qed.schemas.output.EquipmentUpdate} returns this
 */
proto.qed.schemas.output.EquipmentUpdate.prototype.clearMainHand = function() {
  return this.setMainHand(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.qed.schemas.output.EquipmentUpdate.prototype.hasMainHand = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional EquippedItem off_hand = 2;
 * @return {?proto.qed.schemas.output.EquippedItem}
 */
proto.qed.schemas.output.EquipmentUpdate.prototype.getOffHand = function() {
  return /** @type{?proto.qed.schemas.output.EquippedItem} */ (
    jspb.Message.getWrapperField(this, proto.qed.schemas.output.EquippedItem, 2));
};


/**
 * @param {?proto.qed.schemas.output.EquippedItem|undefined} value
 * @return {!proto.qed.schemas.output.EquipmentUpdate} returns this
*/
proto.qed.schemas.output.EquipmentUpdate.prototype.setOffHand = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.qed.schemas.output.EquipmentUpdate} returns this
 */
proto.qed.schemas.output.EquipmentUpdate.prototype.clearOffHand = function() {
  return this.setOffHand(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.qed.schemas.output.EquipmentUpdate.prototype.hasOffHand = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional EquippedItem head = 3;
 * @return {?proto.qed.schemas.output.EquippedItem}
 */
proto.qed.schemas.output.EquipmentUpdate.prototype.getHead = function() {
  return /** @type{?proto.qed.schemas.output.EquippedItem} */ (
    jspb.Message.getWrapperField(this, proto.qed.schemas.output.EquippedItem, 3));
};


/**
 * @param {?proto.qed.schemas.output.EquippedItem|undefined} value
 * @return {!proto.qed.schemas.output.EquipmentUpdate} returns this
*/
proto.qed.schemas.output.EquipmentUpdate.prototype.setHead = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.qed.schemas.output.EquipmentUpdate} returns this
 */
proto.qed.schemas.output.EquipmentUpdate.prototype.clearHead = function() {
  return this.setHead(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.qed.schemas.output.EquipmentUpdate.prototype.hasHead = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional EquippedItem chest = 4;
 * @return {?proto.qed.schemas.output.EquippedItem}
 */
proto.qed.schemas.output.EquipmentUpdate.prototype.getChest = function() {
  return /** @type{?proto.qed.schemas.output.EquippedItem} */ (
    jspb.Message.getWrapperField(this, proto.qed.schemas.output.EquippedItem, 4));
};


/**
 * @param {?proto.qed.schemas.output.EquippedItem|undefined} value
 * @return {!proto.qed.schemas.output.EquipmentUpdate} returns this
*/
proto.qed.schemas.output.EquipmentUpdate.prototype.setChest = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.qed.schemas.output.EquipmentUpdate} returns this
 */
proto.qed.schemas.output.EquipmentUpdate.prototype.clearChest = function() {
  return this.setChest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.qed.schemas.output.EquipmentUpdate.prototype.hasChest = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional EquippedItem legs = 5;
 * @return {?proto.qed.schemas.output.EquippedItem}
 */
proto.qed.schemas.output.EquipmentUpdate.prototype.getLegs = function() {
  return /** @type{?proto.qed.schemas.output.EquippedItem} */ (
    jspb.Message.getWrapperField(this, proto.qed.schemas.output.EquippedItem, 5));
};


/**
 * @param {?proto.qed.schemas.output.EquippedItem|undefined} value
 * @return {!proto.qed.schemas.output.EquipmentUpdate} returns this
*/
proto.qed.schemas.output.EquipmentUpdate.prototype.setLegs = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.qed.schemas.output.EquipmentUpdate} returns this
 */
proto.qed.schemas.output.EquipmentUpdate.prototype.clearLegs = function() {
  return this.setLegs(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.qed.schemas.output.EquipmentUpdate.prototype.hasLegs = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional EquippedItem feet = 6;
 * @return {?proto.qed.schemas.output.EquippedItem}
 */
proto.qed.schemas.output.EquipmentUpdate.prototype.getFeet = function() {
  return /** @type{?proto.qed.schemas.output.EquippedItem} */ (
    jspb.Message.getWrapperField(this, proto.qed.schemas.output.EquippedItem, 6));
};


/**
 * @param {?proto.qed.schemas.output.EquippedItem|undefined} value
 * @return {!proto.qed.schemas.output.EquipmentUpdate} returns this
*/
proto.qed.schemas.output.EquipmentUpdate.prototype.setFeet = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.qed.schemas.output.EquipmentUpdate} returns this
 */
proto.qed.schemas.output.EquipmentUpdate.prototype.clearFeet = function() {
  return this.setFeet(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.qed.schemas.output.EquipmentUpdate.prototype.hasFeet = function() {
  return jspb.Message.getField(this, 6) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.qed.schemas.output.MetricsReport.prototype.toObject = function(opt_includeInstance) {
  return proto.qed.schemas.output.MetricsReport.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.qed.schemas.output.MetricsReport} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qed.schemas.output.MetricsReport.toObject = function(includeInstance, msg) {
  var f, obj = {
    jsonPayload: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.qed.schemas.output.MetricsReport}
 */
proto.qed.schemas.output.MetricsReport.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.qed.schemas.output.MetricsReport;
  return proto.qed.schemas.output.MetricsReport.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.qed.schemas.output.MetricsReport} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.qed.schemas.output.MetricsReport}
 */
proto.qed.schemas.output.MetricsReport.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setJsonPayload(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.qed.schemas.output.MetricsReport.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.qed.schemas.output.MetricsReport.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.qed.schemas.output.MetricsReport} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qed.schemas.output.MetricsReport.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getJsonPayload();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string json_payload = 1;
 * @return {string}
 */
proto.qed.schemas.output.MetricsReport.prototype.getJsonPayload = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.qed.schemas.output.MetricsReport} returns this
 */
proto.qed.schemas.output.MetricsReport.prototype.setJsonPayload = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.qed.schemas.output.LoreCardInstance.repeatedFields_ = [7];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.qed.schemas.output.LoreCardInstance.prototype.toObject = function(opt_includeInstance) {
  return proto.qed.schemas.output.LoreCardInstance.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.qed.schemas.output.LoreCardInstance} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qed.schemas.output.LoreCardInstance.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    templateId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    title: jspb.Message.getFieldWithDefault(msg, 3, ""),
    description: jspb.Message.getFieldWithDefault(msg, 4, ""),
    isActive: jspb.Message.getBooleanFieldWithDefault(msg, 5, false),
    powerCost: jspb.Message.getFieldWithDefault(msg, 6, 0),
    bonusesList: jspb.Message.toObjectList(msg.getBonusesList(),
    proto.qed.schemas.output.LoreCardBonus.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.qed.schemas.output.LoreCardInstance}
 */
proto.qed.schemas.output.LoreCardInstance.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.qed.schemas.output.LoreCardInstance;
  return proto.qed.schemas.output.LoreCardInstance.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.qed.schemas.output.LoreCardInstance} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.qed.schemas.output.LoreCardInstance}
 */
proto.qed.schemas.output.LoreCardInstance.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTemplateId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsActive(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPowerCost(value);
      break;
    case 7:
      var value = new proto.qed.schemas.output.LoreCardBonus;
      reader.readMessage(value,proto.qed.schemas.output.LoreCardBonus.deserializeBinaryFromReader);
      msg.addBonuses(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.qed.schemas.output.LoreCardInstance.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.qed.schemas.output.LoreCardInstance.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.qed.schemas.output.LoreCardInstance} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qed.schemas.output.LoreCardInstance.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTemplateId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getIsActive();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
  f = message.getPowerCost();
  if (f !== 0) {
    writer.writeInt32(
      6,
      f
    );
  }
  f = message.getBonusesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      7,
      f,
      proto.qed.schemas.output.LoreCardBonus.serializeBinaryToWriter
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.qed.schemas.output.LoreCardInstance.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.qed.schemas.output.LoreCardInstance} returns this
 */
proto.qed.schemas.output.LoreCardInstance.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string template_id = 2;
 * @return {string}
 */
proto.qed.schemas.output.LoreCardInstance.prototype.getTemplateId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.qed.schemas.output.LoreCardInstance} returns this
 */
proto.qed.schemas.output.LoreCardInstance.prototype.setTemplateId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string title = 3;
 * @return {string}
 */
proto.qed.schemas.output.LoreCardInstance.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.qed.schemas.output.LoreCardInstance} returns this
 */
proto.qed.schemas.output.LoreCardInstance.prototype.setTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string description = 4;
 * @return {string}
 */
proto.qed.schemas.output.LoreCardInstance.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.qed.schemas.output.LoreCardInstance} returns this
 */
proto.qed.schemas.output.LoreCardInstance.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional bool is_active = 5;
 * @return {boolean}
 */
proto.qed.schemas.output.LoreCardInstance.prototype.getIsActive = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.qed.schemas.output.LoreCardInstance} returns this
 */
proto.qed.schemas.output.LoreCardInstance.prototype.setIsActive = function(value) {
  return jspb.Message.setProto3BooleanField(this, 5, value);
};


/**
 * optional int32 power_cost = 6;
 * @return {number}
 */
proto.qed.schemas.output.LoreCardInstance.prototype.getPowerCost = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.qed.schemas.output.LoreCardInstance} returns this
 */
proto.qed.schemas.output.LoreCardInstance.prototype.setPowerCost = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * repeated LoreCardBonus bonuses = 7;
 * @return {!Array<!proto.qed.schemas.output.LoreCardBonus>}
 */
proto.qed.schemas.output.LoreCardInstance.prototype.getBonusesList = function() {
  return /** @type{!Array<!proto.qed.schemas.output.LoreCardBonus>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.qed.schemas.output.LoreCardBonus, 7));
};


/**
 * @param {!Array<!proto.qed.schemas.output.LoreCardBonus>} value
 * @return {!proto.qed.schemas.output.LoreCardInstance} returns this
*/
proto.qed.schemas.output.LoreCardInstance.prototype.setBonusesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 7, value);
};


/**
 * @param {!proto.qed.schemas.output.LoreCardBonus=} opt_value
 * @param {number=} opt_index
 * @return {!proto.qed.schemas.output.LoreCardBonus}
 */
proto.qed.schemas.output.LoreCardInstance.prototype.addBonuses = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 7, opt_value, proto.qed.schemas.output.LoreCardBonus, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.qed.schemas.output.LoreCardInstance} returns this
 */
proto.qed.schemas.output.LoreCardInstance.prototype.clearBonusesList = function() {
  return this.setBonusesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.qed.schemas.output.LoreCardBonus.prototype.toObject = function(opt_includeInstance) {
  return proto.qed.schemas.output.LoreCardBonus.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.qed.schemas.output.LoreCardBonus} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qed.schemas.output.LoreCardBonus.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: jspb.Message.getFieldWithDefault(msg, 1, ""),
    value: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.qed.schemas.output.LoreCardBonus}
 */
proto.qed.schemas.output.LoreCardBonus.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.qed.schemas.output.LoreCardBonus;
  return proto.qed.schemas.output.LoreCardBonus.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.qed.schemas.output.LoreCardBonus} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.qed.schemas.output.LoreCardBonus}
 */
proto.qed.schemas.output.LoreCardBonus.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.qed.schemas.output.LoreCardBonus.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.qed.schemas.output.LoreCardBonus.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.qed.schemas.output.LoreCardBonus} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qed.schemas.output.LoreCardBonus.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getType();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getValue();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * optional string type = 1;
 * @return {string}
 */
proto.qed.schemas.output.LoreCardBonus.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.qed.schemas.output.LoreCardBonus} returns this
 */
proto.qed.schemas.output.LoreCardBonus.prototype.setType = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int32 value = 2;
 * @return {number}
 */
proto.qed.schemas.output.LoreCardBonus.prototype.getValue = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.qed.schemas.output.LoreCardBonus} returns this
 */
proto.qed.schemas.output.LoreCardBonus.prototype.setValue = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.qed.schemas.output.LoreCardCollection.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.qed.schemas.output.LoreCardCollection.prototype.toObject = function(opt_includeInstance) {
  return proto.qed.schemas.output.LoreCardCollection.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.qed.schemas.output.LoreCardCollection} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qed.schemas.output.LoreCardCollection.toObject = function(includeInstance, msg) {
  var f, obj = {
    cardsList: jspb.Message.toObjectList(msg.getCardsList(),
    proto.qed.schemas.output.LoreCardInstance.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.qed.schemas.output.LoreCardCollection}
 */
proto.qed.schemas.output.LoreCardCollection.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.qed.schemas.output.LoreCardCollection;
  return proto.qed.schemas.output.LoreCardCollection.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.qed.schemas.output.LoreCardCollection} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.qed.schemas.output.LoreCardCollection}
 */
proto.qed.schemas.output.LoreCardCollection.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.qed.schemas.output.LoreCardInstance;
      reader.readMessage(value,proto.qed.schemas.output.LoreCardInstance.deserializeBinaryFromReader);
      msg.addCards(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.qed.schemas.output.LoreCardCollection.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.qed.schemas.output.LoreCardCollection.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.qed.schemas.output.LoreCardCollection} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qed.schemas.output.LoreCardCollection.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCardsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.qed.schemas.output.LoreCardInstance.serializeBinaryToWriter
    );
  }
};


/**
 * repeated LoreCardInstance cards = 1;
 * @return {!Array<!proto.qed.schemas.output.LoreCardInstance>}
 */
proto.qed.schemas.output.LoreCardCollection.prototype.getCardsList = function() {
  return /** @type{!Array<!proto.qed.schemas.output.LoreCardInstance>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.qed.schemas.output.LoreCardInstance, 1));
};


/**
 * @param {!Array<!proto.qed.schemas.output.LoreCardInstance>} value
 * @return {!proto.qed.schemas.output.LoreCardCollection} returns this
*/
proto.qed.schemas.output.LoreCardCollection.prototype.setCardsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.qed.schemas.output.LoreCardInstance=} opt_value
 * @param {number=} opt_index
 * @return {!proto.qed.schemas.output.LoreCardInstance}
 */
proto.qed.schemas.output.LoreCardCollection.prototype.addCards = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.qed.schemas.output.LoreCardInstance, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.qed.schemas.output.LoreCardCollection} returns this
 */
proto.qed.schemas.output.LoreCardCollection.prototype.clearCardsList = function() {
  return this.setCardsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.qed.schemas.output.LevelUpNotification.prototype.toObject = function(opt_includeInstance) {
  return proto.qed.schemas.output.LevelUpNotification.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.qed.schemas.output.LevelUpNotification} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qed.schemas.output.LevelUpNotification.toObject = function(includeInstance, msg) {
  var f, obj = {
    newLevel: jspb.Message.getFieldWithDefault(msg, 1, 0),
    newPowerBudget: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.qed.schemas.output.LevelUpNotification}
 */
proto.qed.schemas.output.LevelUpNotification.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.qed.schemas.output.LevelUpNotification;
  return proto.qed.schemas.output.LevelUpNotification.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.qed.schemas.output.LevelUpNotification} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.qed.schemas.output.LevelUpNotification}
 */
proto.qed.schemas.output.LevelUpNotification.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setNewLevel(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setNewPowerBudget(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.qed.schemas.output.LevelUpNotification.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.qed.schemas.output.LevelUpNotification.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.qed.schemas.output.LevelUpNotification} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qed.schemas.output.LevelUpNotification.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNewLevel();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getNewPowerBudget();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * optional int32 new_level = 1;
 * @return {number}
 */
proto.qed.schemas.output.LevelUpNotification.prototype.getNewLevel = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.qed.schemas.output.LevelUpNotification} returns this
 */
proto.qed.schemas.output.LevelUpNotification.prototype.setNewLevel = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 new_power_budget = 2;
 * @return {number}
 */
proto.qed.schemas.output.LevelUpNotification.prototype.getNewPowerBudget = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.qed.schemas.output.LevelUpNotification} returns this
 */
proto.qed.schemas.output.LevelUpNotification.prototype.setNewPowerBudget = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.qed.schemas.output.LoreCardAwarded.prototype.toObject = function(opt_includeInstance) {
  return proto.qed.schemas.output.LoreCardAwarded.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.qed.schemas.output.LoreCardAwarded} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qed.schemas.output.LoreCardAwarded.toObject = function(includeInstance, msg) {
  var f, obj = {
    card: (f = msg.getCard()) && proto.qed.schemas.output.LoreCardInstance.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.qed.schemas.output.LoreCardAwarded}
 */
proto.qed.schemas.output.LoreCardAwarded.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.qed.schemas.output.LoreCardAwarded;
  return proto.qed.schemas.output.LoreCardAwarded.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.qed.schemas.output.LoreCardAwarded} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.qed.schemas.output.LoreCardAwarded}
 */
proto.qed.schemas.output.LoreCardAwarded.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.qed.schemas.output.LoreCardInstance;
      reader.readMessage(value,proto.qed.schemas.output.LoreCardInstance.deserializeBinaryFromReader);
      msg.setCard(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.qed.schemas.output.LoreCardAwarded.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.qed.schemas.output.LoreCardAwarded.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.qed.schemas.output.LoreCardAwarded} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qed.schemas.output.LoreCardAwarded.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCard();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.qed.schemas.output.LoreCardInstance.serializeBinaryToWriter
    );
  }
};


/**
 * optional LoreCardInstance card = 1;
 * @return {?proto.qed.schemas.output.LoreCardInstance}
 */
proto.qed.schemas.output.LoreCardAwarded.prototype.getCard = function() {
  return /** @type{?proto.qed.schemas.output.LoreCardInstance} */ (
    jspb.Message.getWrapperField(this, proto.qed.schemas.output.LoreCardInstance, 1));
};


/**
 * @param {?proto.qed.schemas.output.LoreCardInstance|undefined} value
 * @return {!proto.qed.schemas.output.LoreCardAwarded} returns this
*/
proto.qed.schemas.output.LoreCardAwarded.prototype.setCard = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.qed.schemas.output.LoreCardAwarded} returns this
 */
proto.qed.schemas.output.LoreCardAwarded.prototype.clearCard = function() {
  return this.setCard(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.qed.schemas.output.LoreCardAwarded.prototype.hasCard = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.qed.schemas.output.OutputEvent.repeatedFields_ = [1];

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.qed.schemas.output.OutputEvent.oneofGroups_ = [[2,3,4,5,6,7,8,9,11,12,13]];

/**
 * @enum {number}
 */
proto.qed.schemas.output.OutputEvent.PayloadCase = {
  PAYLOAD_NOT_SET: 0,
  CHAT_HISTORY: 2,
  CHAT_MESSAGE: 3,
  AREA_UPDATE: 4,
  CHARACTER_LIST: 5,
  CHARACTER_SHEET: 6,
  INVENTORY_LIST: 7,
  METRICS_REPORT: 8,
  EQUIPMENT_UPDATE: 9,
  LORE_CARD_COLLECTION: 11,
  LEVEL_UP_NOTIFICATION: 12,
  LORE_CARD_AWARDED: 13
};

/**
 * @return {proto.qed.schemas.output.OutputEvent.PayloadCase}
 */
proto.qed.schemas.output.OutputEvent.prototype.getPayloadCase = function() {
  return /** @type {proto.qed.schemas.output.OutputEvent.PayloadCase} */(jspb.Message.computeOneofCase(this, proto.qed.schemas.output.OutputEvent.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.qed.schemas.output.OutputEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.qed.schemas.output.OutputEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.qed.schemas.output.OutputEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qed.schemas.output.OutputEvent.toObject = function(includeInstance, msg) {
  var f, obj = {
    targetUserIdsList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f,
    chatHistory: (f = msg.getChatHistory()) && proto.qed.schemas.output.ChatHistory.toObject(includeInstance, f),
    chatMessage: (f = msg.getChatMessage()) && proto.qed.schemas.output.ChatMessage.toObject(includeInstance, f),
    areaUpdate: (f = msg.getAreaUpdate()) && proto.qed.schemas.output.AreaUpdate.toObject(includeInstance, f),
    characterList: (f = msg.getCharacterList()) && proto.qed.schemas.output.CharacterList.toObject(includeInstance, f),
    characterSheet: (f = msg.getCharacterSheet()) && proto.qed.schemas.output.CharacterSheet.toObject(includeInstance, f),
    inventoryList: (f = msg.getInventoryList()) && proto.qed.schemas.output.InventoryList.toObject(includeInstance, f),
    metricsReport: (f = msg.getMetricsReport()) && proto.qed.schemas.output.MetricsReport.toObject(includeInstance, f),
    equipmentUpdate: (f = msg.getEquipmentUpdate()) && proto.qed.schemas.output.EquipmentUpdate.toObject(includeInstance, f),
    loreCardCollection: (f = msg.getLoreCardCollection()) && proto.qed.schemas.output.LoreCardCollection.toObject(includeInstance, f),
    levelUpNotification: (f = msg.getLevelUpNotification()) && proto.qed.schemas.output.LevelUpNotification.toObject(includeInstance, f),
    loreCardAwarded: (f = msg.getLoreCardAwarded()) && proto.qed.schemas.output.LoreCardAwarded.toObject(includeInstance, f),
    traceId: jspb.Message.getFieldWithDefault(msg, 10, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.qed.schemas.output.OutputEvent}
 */
proto.qed.schemas.output.OutputEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.qed.schemas.output.OutputEvent;
  return proto.qed.schemas.output.OutputEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.qed.schemas.output.OutputEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.qed.schemas.output.OutputEvent}
 */
proto.qed.schemas.output.OutputEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addTargetUserIds(value);
      break;
    case 2:
      var value = new proto.qed.schemas.output.ChatHistory;
      reader.readMessage(value,proto.qed.schemas.output.ChatHistory.deserializeBinaryFromReader);
      msg.setChatHistory(value);
      break;
    case 3:
      var value = new proto.qed.schemas.output.ChatMessage;
      reader.readMessage(value,proto.qed.schemas.output.ChatMessage.deserializeBinaryFromReader);
      msg.setChatMessage(value);
      break;
    case 4:
      var value = new proto.qed.schemas.output.AreaUpdate;
      reader.readMessage(value,proto.qed.schemas.output.AreaUpdate.deserializeBinaryFromReader);
      msg.setAreaUpdate(value);
      break;
    case 5:
      var value = new proto.qed.schemas.output.CharacterList;
      reader.readMessage(value,proto.qed.schemas.output.CharacterList.deserializeBinaryFromReader);
      msg.setCharacterList(value);
      break;
    case 6:
      var value = new proto.qed.schemas.output.CharacterSheet;
      reader.readMessage(value,proto.qed.schemas.output.CharacterSheet.deserializeBinaryFromReader);
      msg.setCharacterSheet(value);
      break;
    case 7:
      var value = new proto.qed.schemas.output.InventoryList;
      reader.readMessage(value,proto.qed.schemas.output.InventoryList.deserializeBinaryFromReader);
      msg.setInventoryList(value);
      break;
    case 8:
      var value = new proto.qed.schemas.output.MetricsReport;
      reader.readMessage(value,proto.qed.schemas.output.MetricsReport.deserializeBinaryFromReader);
      msg.setMetricsReport(value);
      break;
    case 9:
      var value = new proto.qed.schemas.output.EquipmentUpdate;
      reader.readMessage(value,proto.qed.schemas.output.EquipmentUpdate.deserializeBinaryFromReader);
      msg.setEquipmentUpdate(value);
      break;
    case 11:
      var value = new proto.qed.schemas.output.LoreCardCollection;
      reader.readMessage(value,proto.qed.schemas.output.LoreCardCollection.deserializeBinaryFromReader);
      msg.setLoreCardCollection(value);
      break;
    case 12:
      var value = new proto.qed.schemas.output.LevelUpNotification;
      reader.readMessage(value,proto.qed.schemas.output.LevelUpNotification.deserializeBinaryFromReader);
      msg.setLevelUpNotification(value);
      break;
    case 13:
      var value = new proto.qed.schemas.output.LoreCardAwarded;
      reader.readMessage(value,proto.qed.schemas.output.LoreCardAwarded.deserializeBinaryFromReader);
      msg.setLoreCardAwarded(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setTraceId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.qed.schemas.output.OutputEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.qed.schemas.output.OutputEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.qed.schemas.output.OutputEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qed.schemas.output.OutputEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTargetUserIdsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
  f = message.getChatHistory();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.qed.schemas.output.ChatHistory.serializeBinaryToWriter
    );
  }
  f = message.getChatMessage();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.qed.schemas.output.ChatMessage.serializeBinaryToWriter
    );
  }
  f = message.getAreaUpdate();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.qed.schemas.output.AreaUpdate.serializeBinaryToWriter
    );
  }
  f = message.getCharacterList();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.qed.schemas.output.CharacterList.serializeBinaryToWriter
    );
  }
  f = message.getCharacterSheet();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.qed.schemas.output.CharacterSheet.serializeBinaryToWriter
    );
  }
  f = message.getInventoryList();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.qed.schemas.output.InventoryList.serializeBinaryToWriter
    );
  }
  f = message.getMetricsReport();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.qed.schemas.output.MetricsReport.serializeBinaryToWriter
    );
  }
  f = message.getEquipmentUpdate();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.qed.schemas.output.EquipmentUpdate.serializeBinaryToWriter
    );
  }
  f = message.getLoreCardCollection();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      proto.qed.schemas.output.LoreCardCollection.serializeBinaryToWriter
    );
  }
  f = message.getLevelUpNotification();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      proto.qed.schemas.output.LevelUpNotification.serializeBinaryToWriter
    );
  }
  f = message.getLoreCardAwarded();
  if (f != null) {
    writer.writeMessage(
      13,
      f,
      proto.qed.schemas.output.LoreCardAwarded.serializeBinaryToWriter
    );
  }
  f = message.getTraceId();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
};


/**
 * repeated string target_user_ids = 1;
 * @return {!Array<string>}
 */
proto.qed.schemas.output.OutputEvent.prototype.getTargetUserIdsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.qed.schemas.output.OutputEvent} returns this
 */
proto.qed.schemas.output.OutputEvent.prototype.setTargetUserIdsList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.qed.schemas.output.OutputEvent} returns this
 */
proto.qed.schemas.output.OutputEvent.prototype.addTargetUserIds = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.qed.schemas.output.OutputEvent} returns this
 */
proto.qed.schemas.output.OutputEvent.prototype.clearTargetUserIdsList = function() {
  return this.setTargetUserIdsList([]);
};


/**
 * optional ChatHistory chat_history = 2;
 * @return {?proto.qed.schemas.output.ChatHistory}
 */
proto.qed.schemas.output.OutputEvent.prototype.getChatHistory = function() {
  return /** @type{?proto.qed.schemas.output.ChatHistory} */ (
    jspb.Message.getWrapperField(this, proto.qed.schemas.output.ChatHistory, 2));
};


/**
 * @param {?proto.qed.schemas.output.ChatHistory|undefined} value
 * @return {!proto.qed.schemas.output.OutputEvent} returns this
*/
proto.qed.schemas.output.OutputEvent.prototype.setChatHistory = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.qed.schemas.output.OutputEvent.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.qed.schemas.output.OutputEvent} returns this
 */
proto.qed.schemas.output.OutputEvent.prototype.clearChatHistory = function() {
  return this.setChatHistory(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.qed.schemas.output.OutputEvent.prototype.hasChatHistory = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional ChatMessage chat_message = 3;
 * @return {?proto.qed.schemas.output.ChatMessage}
 */
proto.qed.schemas.output.OutputEvent.prototype.getChatMessage = function() {
  return /** @type{?proto.qed.schemas.output.ChatMessage} */ (
    jspb.Message.getWrapperField(this, proto.qed.schemas.output.ChatMessage, 3));
};


/**
 * @param {?proto.qed.schemas.output.ChatMessage|undefined} value
 * @return {!proto.qed.schemas.output.OutputEvent} returns this
*/
proto.qed.schemas.output.OutputEvent.prototype.setChatMessage = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.qed.schemas.output.OutputEvent.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.qed.schemas.output.OutputEvent} returns this
 */
proto.qed.schemas.output.OutputEvent.prototype.clearChatMessage = function() {
  return this.setChatMessage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.qed.schemas.output.OutputEvent.prototype.hasChatMessage = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional AreaUpdate area_update = 4;
 * @return {?proto.qed.schemas.output.AreaUpdate}
 */
proto.qed.schemas.output.OutputEvent.prototype.getAreaUpdate = function() {
  return /** @type{?proto.qed.schemas.output.AreaUpdate} */ (
    jspb.Message.getWrapperField(this, proto.qed.schemas.output.AreaUpdate, 4));
};


/**
 * @param {?proto.qed.schemas.output.AreaUpdate|undefined} value
 * @return {!proto.qed.schemas.output.OutputEvent} returns this
*/
proto.qed.schemas.output.OutputEvent.prototype.setAreaUpdate = function(value) {
  return jspb.Message.setOneofWrapperField(this, 4, proto.qed.schemas.output.OutputEvent.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.qed.schemas.output.OutputEvent} returns this
 */
proto.qed.schemas.output.OutputEvent.prototype.clearAreaUpdate = function() {
  return this.setAreaUpdate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.qed.schemas.output.OutputEvent.prototype.hasAreaUpdate = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional CharacterList character_list = 5;
 * @return {?proto.qed.schemas.output.CharacterList}
 */
proto.qed.schemas.output.OutputEvent.prototype.getCharacterList = function() {
  return /** @type{?proto.qed.schemas.output.CharacterList} */ (
    jspb.Message.getWrapperField(this, proto.qed.schemas.output.CharacterList, 5));
};


/**
 * @param {?proto.qed.schemas.output.CharacterList|undefined} value
 * @return {!proto.qed.schemas.output.OutputEvent} returns this
*/
proto.qed.schemas.output.OutputEvent.prototype.setCharacterList = function(value) {
  return jspb.Message.setOneofWrapperField(this, 5, proto.qed.schemas.output.OutputEvent.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.qed.schemas.output.OutputEvent} returns this
 */
proto.qed.schemas.output.OutputEvent.prototype.clearCharacterList = function() {
  return this.setCharacterList(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.qed.schemas.output.OutputEvent.prototype.hasCharacterList = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional CharacterSheet character_sheet = 6;
 * @return {?proto.qed.schemas.output.CharacterSheet}
 */
proto.qed.schemas.output.OutputEvent.prototype.getCharacterSheet = function() {
  return /** @type{?proto.qed.schemas.output.CharacterSheet} */ (
    jspb.Message.getWrapperField(this, proto.qed.schemas.output.CharacterSheet, 6));
};


/**
 * @param {?proto.qed.schemas.output.CharacterSheet|undefined} value
 * @return {!proto.qed.schemas.output.OutputEvent} returns this
*/
proto.qed.schemas.output.OutputEvent.prototype.setCharacterSheet = function(value) {
  return jspb.Message.setOneofWrapperField(this, 6, proto.qed.schemas.output.OutputEvent.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.qed.schemas.output.OutputEvent} returns this
 */
proto.qed.schemas.output.OutputEvent.prototype.clearCharacterSheet = function() {
  return this.setCharacterSheet(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.qed.schemas.output.OutputEvent.prototype.hasCharacterSheet = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional InventoryList inventory_list = 7;
 * @return {?proto.qed.schemas.output.InventoryList}
 */
proto.qed.schemas.output.OutputEvent.prototype.getInventoryList = function() {
  return /** @type{?proto.qed.schemas.output.InventoryList} */ (
    jspb.Message.getWrapperField(this, proto.qed.schemas.output.InventoryList, 7));
};


/**
 * @param {?proto.qed.schemas.output.InventoryList|undefined} value
 * @return {!proto.qed.schemas.output.OutputEvent} returns this
*/
proto.qed.schemas.output.OutputEvent.prototype.setInventoryList = function(value) {
  return jspb.Message.setOneofWrapperField(this, 7, proto.qed.schemas.output.OutputEvent.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.qed.schemas.output.OutputEvent} returns this
 */
proto.qed.schemas.output.OutputEvent.prototype.clearInventoryList = function() {
  return this.setInventoryList(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.qed.schemas.output.OutputEvent.prototype.hasInventoryList = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional MetricsReport metrics_report = 8;
 * @return {?proto.qed.schemas.output.MetricsReport}
 */
proto.qed.schemas.output.OutputEvent.prototype.getMetricsReport = function() {
  return /** @type{?proto.qed.schemas.output.MetricsReport} */ (
    jspb.Message.getWrapperField(this, proto.qed.schemas.output.MetricsReport, 8));
};


/**
 * @param {?proto.qed.schemas.output.MetricsReport|undefined} value
 * @return {!proto.qed.schemas.output.OutputEvent} returns this
*/
proto.qed.schemas.output.OutputEvent.prototype.setMetricsReport = function(value) {
  return jspb.Message.setOneofWrapperField(this, 8, proto.qed.schemas.output.OutputEvent.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.qed.schemas.output.OutputEvent} returns this
 */
proto.qed.schemas.output.OutputEvent.prototype.clearMetricsReport = function() {
  return this.setMetricsReport(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.qed.schemas.output.OutputEvent.prototype.hasMetricsReport = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional EquipmentUpdate equipment_update = 9;
 * @return {?proto.qed.schemas.output.EquipmentUpdate}
 */
proto.qed.schemas.output.OutputEvent.prototype.getEquipmentUpdate = function() {
  return /** @type{?proto.qed.schemas.output.EquipmentUpdate} */ (
    jspb.Message.getWrapperField(this, proto.qed.schemas.output.EquipmentUpdate, 9));
};


/**
 * @param {?proto.qed.schemas.output.EquipmentUpdate|undefined} value
 * @return {!proto.qed.schemas.output.OutputEvent} returns this
*/
proto.qed.schemas.output.OutputEvent.prototype.setEquipmentUpdate = function(value) {
  return jspb.Message.setOneofWrapperField(this, 9, proto.qed.schemas.output.OutputEvent.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.qed.schemas.output.OutputEvent} returns this
 */
proto.qed.schemas.output.OutputEvent.prototype.clearEquipmentUpdate = function() {
  return this.setEquipmentUpdate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.qed.schemas.output.OutputEvent.prototype.hasEquipmentUpdate = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional LoreCardCollection lore_card_collection = 11;
 * @return {?proto.qed.schemas.output.LoreCardCollection}
 */
proto.qed.schemas.output.OutputEvent.prototype.getLoreCardCollection = function() {
  return /** @type{?proto.qed.schemas.output.LoreCardCollection} */ (
    jspb.Message.getWrapperField(this, proto.qed.schemas.output.LoreCardCollection, 11));
};


/**
 * @param {?proto.qed.schemas.output.LoreCardCollection|undefined} value
 * @return {!proto.qed.schemas.output.OutputEvent} returns this
*/
proto.qed.schemas.output.OutputEvent.prototype.setLoreCardCollection = function(value) {
  return jspb.Message.setOneofWrapperField(this, 11, proto.qed.schemas.output.OutputEvent.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.qed.schemas.output.OutputEvent} returns this
 */
proto.qed.schemas.output.OutputEvent.prototype.clearLoreCardCollection = function() {
  return this.setLoreCardCollection(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.qed.schemas.output.OutputEvent.prototype.hasLoreCardCollection = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional LevelUpNotification level_up_notification = 12;
 * @return {?proto.qed.schemas.output.LevelUpNotification}
 */
proto.qed.schemas.output.OutputEvent.prototype.getLevelUpNotification = function() {
  return /** @type{?proto.qed.schemas.output.LevelUpNotification} */ (
    jspb.Message.getWrapperField(this, proto.qed.schemas.output.LevelUpNotification, 12));
};


/**
 * @param {?proto.qed.schemas.output.LevelUpNotification|undefined} value
 * @return {!proto.qed.schemas.output.OutputEvent} returns this
*/
proto.qed.schemas.output.OutputEvent.prototype.setLevelUpNotification = function(value) {
  return jspb.Message.setOneofWrapperField(this, 12, proto.qed.schemas.output.OutputEvent.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.qed.schemas.output.OutputEvent} returns this
 */
proto.qed.schemas.output.OutputEvent.prototype.clearLevelUpNotification = function() {
  return this.setLevelUpNotification(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.qed.schemas.output.OutputEvent.prototype.hasLevelUpNotification = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional LoreCardAwarded lore_card_awarded = 13;
 * @return {?proto.qed.schemas.output.LoreCardAwarded}
 */
proto.qed.schemas.output.OutputEvent.prototype.getLoreCardAwarded = function() {
  return /** @type{?proto.qed.schemas.output.LoreCardAwarded} */ (
    jspb.Message.getWrapperField(this, proto.qed.schemas.output.LoreCardAwarded, 13));
};


/**
 * @param {?proto.qed.schemas.output.LoreCardAwarded|undefined} value
 * @return {!proto.qed.schemas.output.OutputEvent} returns this
*/
proto.qed.schemas.output.OutputEvent.prototype.setLoreCardAwarded = function(value) {
  return jspb.Message.setOneofWrapperField(this, 13, proto.qed.schemas.output.OutputEvent.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.qed.schemas.output.OutputEvent} returns this
 */
proto.qed.schemas.output.OutputEvent.prototype.clearLoreCardAwarded = function() {
  return this.setLoreCardAwarded(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.qed.schemas.output.OutputEvent.prototype.hasLoreCardAwarded = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional string trace_id = 10;
 * @return {string}
 */
proto.qed.schemas.output.OutputEvent.prototype.getTraceId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.qed.schemas.output.OutputEvent} returns this
 */
proto.qed.schemas.output.OutputEvent.prototype.setTraceId = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


goog.object.extend(exports, proto.qed.schemas.output);
